#include<iostream>
using namespace std;
// 构造函数语法： 类名() {}   进行初始化操作
// 1.构造函数没有返回值也不写void
// 2.函数名称与类名相同
// 3.构造函数可以有参数，因此可以发生重载
// 4.程序在调用对象的时候会自动调用构造函数，无需手动调用，而且只会调用一次

// 析构函数语法：~类名() {}   进行清理操作
// 1.析构函数，没有返回值也不写void
// 2.函数名称与类名相同，在名称前面加上符号~
// 3.析构函数不可以有参数，因此不可以发生重载
// 4.程序在对象销毁前会自动调用析构函数，无需手动调用，而且只会调用一次
class Person
{
    public:
    Person()
    {
        cout<<"构造函数的调用"<<endl;  //不手动写 系统也会自动写 不过是空实现  
    }
     ~Person()
    {
        cout<<"析构函数的调用"<<endl;
    }
};
void test()
{
    Person p;//自动调用构造函数和析构函数   
}
int main()
{
    // test();
    Person p;    //析构函数是在所有都执行结束后清理数据  
    system("pause");
    return 0;
}